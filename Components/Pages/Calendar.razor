@page "/Calendar"
@using CalendarApp1.Components.Layout
@using CalendarApp1.Models
@using CalendarApp1.Services
@using Month = CalendarApp1.Components.Month
@rendermode InteractiveServer
@layout MainLayout


<PageTitle>Calendar</PageTitle>

<h1>Calendar</h1>

<div class="mb-3">
    <DateInput TValue="DateOnly" Value="date1" ValueExpression="() => date1" ValueChanged="(value) => DateChanged(value)" />
</div>

@if (_month is not null)
{
    <Month CurMonth="_month"></Month>
}


@inject CalendarDbService DbService
@code {
    private MonthModel? _month;
    
    private DateOnly date1 = DateOnly.FromDateTime(DateTime.Now);

    protected override async Task OnInitializedAsync()
    {
        _month = await MonthModel.MonthInfoAsync(date1, DbService);
        // _month = MonthModel.DaysToMonth(_month.DaysList, date1);
    }

    private async Task DateChanged(DateOnly dateOnly)
    {
        if (dateOnly == date1)
        {
            return;
        }
        
        date1 = dateOnly;
        _month = await MonthModel.MonthInfoAsync(dateOnly, DbService);
        // Console.WriteLine($"{dateOnly}\nFirst day of the month is a {(DayOfWeek)_month.StartDay}");
    }
}